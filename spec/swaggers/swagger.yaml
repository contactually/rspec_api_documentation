swagger: '2.0'
info:
  title: Swagger Sample App Number One
  description: This is a sample server Petstore server.
  termsOfService: 'http://swagger.io/terms/'
  contact:
    name: API Support
    url: 'http://www.swagger.io/support'
    email: support@swagger.io
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
  version: 1.0.1
host: 'localhost:3000'
schemes:
  - http
  - https
consumes:
  - application/json
  - application/xml
produces:
  - application/json
  - application/xml
paths:
  /orders:
    get:
      tags:
        - Orders
      summary: Getting a list of orders
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: page
          in: query
          description: Current page of orders
          required: false
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
          headers: {}
          examples:
            application/json:
              - id: 1
                name: Order 0
                paid: true
                email: email0@example.com
                created_at: '2017-06-08T13:32:37.570Z'
                updated_at: '2017-06-08T13:32:37.570Z'
              - id: 2
                name: Order 1
                paid: true
                email: email1@example.com
                created_at: '2017-06-08T13:32:37.582Z'
                updated_at: '2017-06-08T13:32:37.582Z'
      deprecated: false
      security: []
    post:
      tags:
        - Orders
      summary: Creating an order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: object
            properties:
              order:
                type: object
                properties:
                  name:
                    type: string
                  paid:
                    type: boolean
                  email:
                    type: string
                required:
                  - name
      responses:
        '201':
          description: Created
          schema:
            type: object
            properties:
              order:
                type: object
                properties:
                  name:
                    type: string
                  paid:
                    type: boolean
                  email:
                    type: string
          headers: {}
          examples:
            application/json:
              id: 1
              name: Order 1
              paid: true
              email: email@example.com
              created_at: '2017-06-08T13:32:37.659Z'
              updated_at: '2017-06-08T13:32:37.659Z'
      deprecated: false
      security: []
    head:
      tags:
        - Orders
      summary: Getting the headers
      consumes:
        - application/json
      produces:
        - application/json
      parameters: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
          headers: {}
          examples: {}
      deprecated: false
      security: []
  '/orders/{id}':
    get:
      tags:
        - Orders
      summary: Getting a specific order
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Id of order
          required: true
          type: integer
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties: {}
          headers: {}
          examples:
            application/json:
              id: 1
              name: Old Name
              paid: true
              email: email@example.com
              created_at: '2017-06-08T13:32:37.699Z'
              updated_at: '2017-06-08T13:32:37.699Z'
      deprecated: false
      security: []
    put:
      tags:
        - Orders
      summary: Updating an order
      consumes:
        - application/json
      produces: []
      parameters:
        - name: body
          in: body
          description: ''
          required: false
          schema:
            type: object
            properties:
              order:
                type: object
                properties:
                  name:
                    type: string
                  paid:
                    type: boolean
                  email:
                    type: string
        - name: id
          in: path
          description: Id of order
          required: true
          type: integer
      responses:
        '204':
          description: No Content
          schema:
            type: object
            properties: {}
          headers: {}
      deprecated: false
      security: []
    delete:
      tags:
        - Orders
      summary: Deleting an order
      consumes:
        - application/json
      produces: []
      parameters:
        - name: id
          in: path
          description: Id of order
          required: true
          type: integer
      responses:
        '204':
          description: No Content
          schema:
            type: object
            properties: {}
          headers: {}
      deprecated: false
      security: []
  /uploads:
    post:
      tags:
        - Uploads
      summary: Uploading a new file
      consumes:
        - multipart/form-data
      produces:
        - text/html
      parameters:
        - name: file
          in: formData
          description: New file to upload
          required: false
          type: file
      responses:
        '201':
          description: Created
          schema:
            type: object
            properties: {}
          headers: {}
          examples: {}
      deprecated: false
      security:
        - apiKey: []
securityDefinitions:
  apiKey:
    type: apiKey
    description: Api Key description
    name: Authorization
    in: header
tags:
  - name: Orders
    description: Orders are top-level business objects
  - name: Uploads
